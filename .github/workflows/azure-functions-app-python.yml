# This workflow will build a Python app and deploy it to an Azure Functions App on Linux when a commit is pushed to your default branch.
#
# This workflow assumes you have already created the target Azure Functions app.
# For instructions see https://learn.microsoft.com/en-us/azure/azure-functions/create-first-function-vs-code-python?pivots=python-mode-configuration
#
# To configure this workflow:
# 1. Set up the following secrets in your repository:
#   - AZURE_FUNCTIONAPP_PUBLISH_PROFILE
# 2. Change env variables for your configuration.
#
# For more information on:
#   - GitHub Actions for Azure: https://github.com/Azure/Actions
#   - Azure Functions Action: https://github.com/Azure/functions-action
#   - Publish Profile: https://github.com/Azure/functions-action#using-publish-profile-as-deployment-credential-recommended
#   - Azure Service Principal for RBAC: https://github.com/Azure/functions-action#using-azure-service-principal-for-rbac-as-deployment-credential
#
# For more samples to get started with GitHub Action workflows to deploy to Azure: https://github.com/Azure/actions-workflow-samples/tree/master/FunctionApp

name: Deploy Python project to Azure Function App

on:
  push:
    branches: ["main"]

env:
  AZURE_FUNCTIONAPP_NAME: 'movie-recommendation-system'   # set this to your function app name on Azure
  AZURE_FUNCTIONAPP_PACKAGE_PATH: '.'       # set this to the path to your function app project, defaults to the repository root
  PYTHON_VERSION: '3.9'                     # set this to the python version to use (e.g. '3.6', '3.7', '3.8')

jobs:
  copy-files:
    runs-on: ubuntu-latest
    environment: dev
    steps:
    - name: 'Copy files to remote server'
      uses: actions/checkout@v4

    # - name: Azure login
    #   uses: azure/login@v1.4.6
    #   with:
    #     client-id: ${{ secrets.TF_VAR_ARM_CLIENT_ID }}
    #     tenant-id: ${{ secrets.AZURE_TENANT_ID }}
    #     subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
                
    - name: deploy to server
      uses: saranraj3195/sparkout-deployment@v2
      env:
          DEPLOY_KEY: ${{ secrets.SERVER_SSH_KEY }}
          ARGS: "-avz --progress -h " #--exclude
          SERVER_PORT: ${{ secrets.SERVER_PORT }}
          FOLDER: "*"
          SERVER_IP: ${{ secrets.SERVER_IP }}
          USERNAME: ${{ secrets.USERNAME }}
          SERVER_DESTINATION: ${{ secrets.SERVER_DESTINATION }}
          
  setup-webserver:
    runs-on: ubuntu-latest
    needs: copy-files
    steps:
    - name: setup web server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SERVER_IP }}
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.PASSWORD }}
        port: ${{ secrets.SERVER_PORT }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        script: |
          sudo apt install software-properties-common
          sudo add-apt-repository ppa:deadsnakes/ppa
          sudo apt update
          sudo apt install python3.12 -y
          sudo apt install python3-pip -y
          mkdir static
          python3.12 -m venv venv
          source venv/bin/activate
          pip install uvicorn fastapi pandas numpy scikit-learn click==8.0.0
          export PATH=$PATH:~/.local/bin
          nohup uvicorn main:app --host 0.0.0.0 --port 8000 --reload > ~/uvicorn.log 2>&1 & disown
          
                            

    # - name: Setup Python ${{ env.PYTHON_VERSION }} Environment
    #   uses: actions/setup-python@v4
    #   with:
    #     python-version: ${{ env.PYTHON_VERSION }}

    # - name: 'Resolve Project Dependencies Using Pip'
    #   shell: bash
    #   run: |
    #     pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
    #     python -m pip install --upgrade pip
    #     pip install -r requirements.txt --target=".python_packages/lib/site-packages"
    #     popd

    # - name: 'Run Azure Functions Action'
    #   uses: Azure/functions-action@v1
    #   id: fa
    #   with:
    #     app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
    #     package: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
    #     publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }} # Remove publish-profile to use Azure RBAC
    #     scm-do-build-during-deployment: true
    #     enable-oryx-build: true
